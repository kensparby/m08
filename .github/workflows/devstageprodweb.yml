name: Terraform CI/CD

on:
  push:
    branches:
    - main
    
  workflow_dispatch:
  # workflow_dispatch:
  #   inputs:
  #     action_type:
  #       description: 'What action should be performed?'
  #       required: true
  #       default: 'apply'
  #       type: choice
  #       options:
  #       - apply
  #       - destroy

jobs:
  env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      
  dev_stage:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init
  
      - name: Terraform workspace select or create dev
        run: terraform workspace select dev || terraform workspace new dev
  
      - name: Terraform apply dev
        run: terraform apply -auto-approve
  
      - name: Test dev
        run: curl $(terraform output -raw primary_web_endpoint)

  stage_prod:
    needs: dev_stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform init
        run: terraform init

      - name: Terraform workspace select or create stage
        run: terraform workspace select stage || terraform workspace new stage

      - name: Terraform apply stage
        run: terraform apply -auto-approve

      - name: Test stage
        run: curl $(terraform output -raw primary_web_endpoint)

  prod:
    needs: stage_prod
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.get_web_endpoint.outputs.WEB_ENDPOINT }} 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Terraform init
        run: terraform init

      - name: Terraform workspace select or create prod
        run: terraform workspace select prod || terraform workspace new prod
    
      - name: Terraform apply prod
        run: terraform apply -auto-approve

      - name: Test prod
        run: curl $(terraform output -raw primary_web_endpoint)

      - name: Get web endpoint
        id: get_web_endpoint
        run: echo "WEB_ENDPOINT=$(terraform output -raw primary_web_endpoint)"
